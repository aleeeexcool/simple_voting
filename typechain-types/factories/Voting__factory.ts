/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Voting, VotingInterface } from "../Voting";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maxCandidates",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "_comission",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "candidate",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "existOnThisVoting",
        type: "bool",
      },
    ],
    name: "candidateInfo",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "votingDraftCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "startDate",
        type: "uint256",
      },
    ],
    name: "votingStarted",
    type: "event",
  },
  {
    inputs: [],
    name: "Comission",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_candidate",
        type: "address",
      },
    ],
    name: "addCandidate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_candidates",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "_period",
        type: "uint256",
      },
    ],
    name: "addVoting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_candidate",
        type: "address",
      },
    ],
    name: "checkCandidate",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "counter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_candidate",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "deleteCandidate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_newPeriod",
        type: "uint256",
      },
    ],
    name: "editVotingPeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "getVotingInfo",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxCandidates",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minCandidates",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maxCandidates",
        type: "uint256",
      },
    ],
    name: "setMaxCandidates",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "startVoting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_candidate",
        type: "address",
      },
    ],
    name: "takePartInVoting",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "withDrawPrize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a0604052600280553480156200001557600080fd5b5060405162001f2838038062001f2883398181016040528101906200003b919062000116565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060ff1660808160ff16815250508160038190555050506200015d565b600080fd5b6000819050919050565b620000b2816200009d565b8114620000be57600080fd5b50565b600081519050620000d281620000a7565b92915050565b600060ff82169050919050565b620000f081620000d8565b8114620000fc57600080fd5b50565b6000815190506200011081620000e5565b92915050565b6000806040838503121562000130576200012f62000098565b5b60006200014085828601620000c1565b92505060206200015385828601620000ff565b9150509250929050565b608051611da86200018060003960008181610380015261122a0152611da86000f3fe6080604052600436106100e85760003560e01c806361bc221a1161008a5780638da5cb5b116100595780638da5cb5b146102d8578063c754af9214610303578063ddc0dc4e1461032c578063f1bf499e14610355576100e8565b806361bc221a1461021c57806365af2ac81461024757806378a0af4c146102725780638ab9b9d01461029b576100e8565b8063248a0634116100c6578063248a06341461016c578063262989e8146101ae57806333c57ccd146101ca5780633d2f5bda146101f3576100e8565b80630c2b13e6146100ed578063178b519b146101185780631c9b69bd14610141575b600080fd5b3480156100f957600080fd5b5061010261037e565b60405161010f919061135e565b60405180910390f35b34801561012457600080fd5b5061013f600480360381019061013a91906113b9565b6103a2565b005b34801561014d57600080fd5b506101566104bc565b6040516101639190611408565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e9190611423565b6104c2565b6040516101a5969594939291906114ac565b60405180910390f35b6101c860048036038101906101c39190611539565b610597565b005b3480156101d657600080fd5b506101f160048036038101906101ec9190611539565b610895565b005b3480156101ff57600080fd5b5061021a60048036038101906102159190611423565b610a49565b005b34801561022857600080fd5b50610231610b5c565b60405161023e9190611408565b60405180910390f35b34801561025357600080fd5b5061025c610b62565b6040516102699190611408565b60405180910390f35b34801561027e57600080fd5b50610299600480360381019061029491906115de565b610b68565b005b3480156102a757600080fd5b506102c260048036038101906102bd9190611539565b610d0c565b6040516102cf919061163e565b60405180910390f35b3480156102e457600080fd5b506102ed610d7a565b6040516102fa9190611659565b60405180910390f35b34801561030f57600080fd5b5061032a60048036038101906103259190611674565b610d9e565b005b34801561033857600080fd5b50610353600480360381019061034e9190611423565b610f52565b005b34801561036157600080fd5b5061037c60048036038101906103779190611423565b61102f565b005b7f000000000000000000000000000000000000000000000000000000000000000081565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610430576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042790611711565b60405180910390fd5b60006004600084815260200190815260200160002060000160006101000a81548160ff021916908315150217905561049d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104949061177d565b60405180910390fd5b8060046000848152602001908152602001600020600401819055505050565b60025481565b6000806000806000806004600088815260200190815260200160002060000160009054906101000a900460ff166004600089815260200190815260200160002060010154600460008a815260200190815260200160002060020154600460008b815260200190815260200160002060030154600460008c815260200190815260200160002060040154600460008d815260200190815260200160002060000160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1695509550955095509550955091939550919395565b6004600083815260200190815260200160002060000160009054906101000a900460ff166105fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f1906117e9565b60405180910390fd5b42600460008481526020019081526020016000206004015460046000858152602001908152602001600020600101546106339190611838565b11610673576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066a906118b8565b60405180910390fd5b61067d8282610d0c565b6106bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b39061194a565b60405180910390fd5b346004600084815260200190815260200160002060050160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282546107229190611838565b925050819055503460046000848152602001908152602001600020600301600082825461074f9190611838565b9250508190555060046000838152602001908152602001600020600201546004600084815260200190815260200160002060050160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001541115610891576004600083815260200190815260200160002060050160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001546004600084815260200190815260200160002060020181905550806004600084815260200190815260200160002060000160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610923576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161091a90611711565b60405180910390fd5b6004600083815260200190815260200160002060000160009054906101000a900460ff16610986576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097d9061177d565b60405180910390fd5b60016004600084815260200190815260200160002060050160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff16827f0d7a9ec927774dd3a7db78abe1a8634c4e4509290232ebe5bcd8e656d69464336001604051610a3d919061163e565b60405180910390a35050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ad7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ace90611711565b60405180910390fd5b60016004600083815260200190815260200160002060000160006101000a81548160ff021916908315150217905550426004600083815260200190815260200160002060010181905550807f0377dfbd6e4aa0688c840ef165b5c872f7eabf72f5ccfd60c13c18e67d9ea58142604051610b519190611408565b60405180910390a250565b60015481565b60035481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610bf6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bed90611711565b60405180910390fd5b8282905060025411158015610c0f575060035483839050105b610c4e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c45906119dc565b60405180910390fd5b806004600060015481526020019081526020016000206004018190555060005b83839050811015610cbf57610cac600154858584818110610c9257610c916119fc565b5b9050602002016020810190610ca79190611a2b565b610895565b8080610cb790611a58565b915050610c6e565b506001547ff9eb788c9816b666dd390a2b8164f8548e5ea6daab2fc6cf7cce32acc8e6305e60405160405180910390a260016000815480929190610d0290611a58565b9190505550505050565b60006004600084815260200190815260200160002060050160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff16905092915050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e2c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e2390611711565b60405180910390fd5b6004600082815260200190815260200160002060000160009054906101000a900460ff16610e8f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e869061177d565b60405180910390fd5b60006004600083815260200190815260200160002060050160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16817f0d7a9ec927774dd3a7db78abe1a8634c4e4509290232ebe5bcd8e656d69464336000604051610f46919061163e565b60405180910390a35050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610fe0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fd790611711565b60405180910390fd5b806002541115611025576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161101c90611b12565b60405180910390fd5b8060038190555050565b6004600082815260200190815260200160002060000160009054906101000a900460ff16611092576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611089906117e9565b60405180910390fd5b42600460008381526020019081526020016000206004015460046000848152602001908152602001600020600101546110cb9190611838565b1061110b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161110290611b7e565b60405180910390fd5b6004600082815260200190815260200160002060000160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146111af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111a690611bea565b60405180910390fd5b6000600460008381526020019081526020016000206003015411611208576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111ff90611c7c565b60405180910390fd5b60006004600083815260200190815260200160002060030154905060006064827f000000000000000000000000000000000000000000000000000000000000000060ff166112569190611c9c565b6112609190611d0d565b9050600081836112709190611d3e565b90506000600460008681526020019081526020016000206003018190555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f193505050501580156112f4573d6000803e3d6000fd5b503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561133b573d6000803e3d6000fd5b5050505050565b600060ff82169050919050565b61135881611342565b82525050565b6000602082019050611373600083018461134f565b92915050565b600080fd5b600080fd5b6000819050919050565b61139681611383565b81146113a157600080fd5b50565b6000813590506113b38161138d565b92915050565b600080604083850312156113d0576113cf611379565b5b60006113de858286016113a4565b92505060206113ef858286016113a4565b9150509250929050565b61140281611383565b82525050565b600060208201905061141d60008301846113f9565b92915050565b60006020828403121561143957611438611379565b5b6000611447848285016113a4565b91505092915050565b60008115159050919050565b61146581611450565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006114968261146b565b9050919050565b6114a68161148b565b82525050565b600060c0820190506114c1600083018961145c565b6114ce60208301886113f9565b6114db60408301876113f9565b6114e860608301866113f9565b6114f560808301856113f9565b61150260a083018461149d565b979650505050505050565b6115168161148b565b811461152157600080fd5b50565b6000813590506115338161150d565b92915050565b600080604083850312156115505761154f611379565b5b600061155e858286016113a4565b925050602061156f85828601611524565b9150509250929050565b600080fd5b600080fd5b600080fd5b60008083601f84011261159e5761159d611579565b5b8235905067ffffffffffffffff8111156115bb576115ba61157e565b5b6020830191508360208202830111156115d7576115d6611583565b5b9250929050565b6000806000604084860312156115f7576115f6611379565b5b600084013567ffffffffffffffff8111156116155761161461137e565b5b61162186828701611588565b93509350506020611634868287016113a4565b9150509250925092565b6000602082019050611653600083018461145c565b92915050565b600060208201905061166e600083018461149d565b92915050565b6000806040838503121561168b5761168a611379565b5b600061169985828601611524565b92505060206116aa858286016113a4565b9150509250929050565b600082825260208201905092915050565b7f536f7272792c2062757420796f7520617265206e6f7420616e206f776e657221600082015250565b60006116fb6020836116b4565b9150611706826116c5565b602082019050919050565b6000602082019050818103600083015261172a816116ee565b9050919050565b7f54686520766f74696e672068617320616c726561647920626567756e21000000600082015250565b6000611767601d836116b4565b915061177282611731565b602082019050919050565b600060208201905081810360008301526117968161175a565b9050919050565b7f54686520766f74696e6720646f65736e27742073746172742100000000000000600082015250565b60006117d36019836116b4565b91506117de8261179d565b602082019050919050565b60006020820190508181036000830152611802816117c6565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061184382611383565b915061184e83611383565b925082820190508082111561186657611865611809565b5b92915050565b7f54686520766f74696e672068617320656e646564210000000000000000000000600082015250565b60006118a26015836116b4565b91506118ad8261186c565b602082019050919050565b600060208201905081810360008301526118d181611895565b9050919050565b7f546869732063616e6469646174657320646f6573206e6f74206578697374206960008201527f6e207468697320766f74696e6721000000000000000000000000000000000000602082015250565b6000611934602e836116b4565b915061193f826118d8565b604082019050919050565b6000602082019050818103600083015261196381611927565b9050919050565b7f546865206e756d626572206f662063616e64696461746573206d75737420636f60008201527f6d706c7920776974682074686520626f74696e672072756c6573210000000000602082015250565b60006119c6603b836116b4565b91506119d18261196a565b604082019050919050565b600060208201905081810360008301526119f5816119b9565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060208284031215611a4157611a40611379565b5b6000611a4f84828501611524565b91505092915050565b6000611a6382611383565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611a9557611a94611809565b5b600182019050919050565b7f4d696e696d756d206e756d626572206f662063616e646964617465732069732060008201527f3200000000000000000000000000000000000000000000000000000000000000602082015250565b6000611afc6021836116b4565b9150611b0782611aa0565b604082019050919050565b60006020820190508181036000830152611b2b81611aef565b9050919050565b7f54686520766f74696e67206973206e6f7420656e646564207965742100000000600082015250565b6000611b68601c836116b4565b9150611b7382611b32565b602082019050919050565b60006020820190508181036000830152611b9781611b5b565b9050919050565b7f596f7520617265206e6f7420612077696e6e6572210000000000000000000000600082015250565b6000611bd46015836116b4565b9150611bdf82611b9e565b602082019050919050565b60006020820190508181036000830152611c0381611bc7565b9050919050565b7f596f75206861766520616c7265616479207265636569766520796f757220707260008201527f697a652100000000000000000000000000000000000000000000000000000000602082015250565b6000611c666024836116b4565b9150611c7182611c0a565b604082019050919050565b60006020820190508181036000830152611c9581611c59565b9050919050565b6000611ca782611383565b9150611cb283611383565b9250828202611cc081611383565b91508282048414831517611cd757611cd6611809565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611d1882611383565b9150611d2383611383565b925082611d3357611d32611cde565b5b828204905092915050565b6000611d4982611383565b9150611d5483611383565b9250828203905081811115611d6c57611d6b611809565b5b9291505056fea2646970667358221220ee91e18f0009f9c22f8c305c11ca8a9f6f3ca9373a120399f900048edc92b5de64736f6c63430008110033";

type VotingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VotingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Voting__factory extends ContractFactory {
  constructor(...args: VotingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _maxCandidates: PromiseOrValue<BigNumberish>,
    _comission: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Voting> {
    return super.deploy(
      _maxCandidates,
      _comission,
      overrides || {}
    ) as Promise<Voting>;
  }
  override getDeployTransaction(
    _maxCandidates: PromiseOrValue<BigNumberish>,
    _comission: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _maxCandidates,
      _comission,
      overrides || {}
    );
  }
  override attach(address: string): Voting {
    return super.attach(address) as Voting;
  }
  override connect(signer: Signer): Voting__factory {
    return super.connect(signer) as Voting__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VotingInterface {
    return new utils.Interface(_abi) as VotingInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Voting {
    return new Contract(address, _abi, signerOrProvider) as Voting;
  }
}
